<# 
.SYNOPSIS
	Takes imnput from a csv and modifies passwords
.DESCRIPTION
	This takes a CSV file and resets the password. the CSV needs the following fields: SamAccountName
.PARAMETER CSV
	The file to load
.EXAMPLE
	Set-UName.ps1 C:\temp\users.csv
    reads the CSV and resets user names according to the username field.
.Notes 
    Script: Set-UName.ps1  
    Author: Mike Murray 
    Last Edit: 01/11/2017 08:11:43 
    Comments: 
 
#>

#Requires -Version 2.0
#Requires -Module ActiveDirectory

[cmdletBinding(ConfirmImpact='High', SupportsShouldProcess = $True)]

param(
    [Parameter(Mandatory=$True)]
    [alias("CSV")]
    [string]$File
) 

function Get-Password(){
	param(
	[Parameter()]
	[int]$length = 8
	)
	# sourced from scripting guy blog!
	$ascii = $NULL;For ($a=33;$a –le 126;$a++) {$ascii+=,[char][byte]$a }
	
	for($x = 1; $x -le $length; $x++){
		 $PWD+=($ascii | GET-RANDOM)
		 }
		 
	$PWD
}

$CSV = Import-Csv -Path $File
Write-Verbose "Loaded CSV"

foreach($account in $CSV){
    $i++
    Write-Progress -Activity "Fixing Accounts..." -CurrentOperation "User: $account.UserName" `
    -PercentComplete (($i / $csv.Length) * 100)

    Write-Verbose "Checking for user $account.SamAccountName"

    $pass = Get-Password
    $secpass = $pass | ConvertTo-SecureString -AsPlainText -Force
    
    if($pscmdlet.ShouldProcess($account.SamAccountName)){
        Set-ADAccountPassword $User.SamAccountName -NewPassword $secpass
    }
    
    Add-Member -InputObject $account -NotePropertyName 'Password' -NotePropertyValue $pass
}
Write-Progress "Fixing Account..." -Status 'Done' -Completed

$CSV
# SIG # Begin signature block
# MIIV+gYJKoZIhvcNAQcCoIIV6zCCFecCAQExCzAJBgUrDgMCGgUAMGkGCisGAQQB
# gjcCAQSgWzBZMDQGCisGAQQBgjcCAR4wJgIDAQAABBAfzDtgWUsITrck0sYpfvNR
# AgEAAgEAAgEAAgEAAgEAMCEwCQYFKw4DAhoFAAQUBAQchCLUybiSMxYH4bh92Ujl
# XfGgghBdMIIF5jCCA86gAwIBAgIKFO7DFwAAAAAAAjANBgkqhkiG9w0BAQsFADB8
# MQswCQYDVQQGEwJVUzELMAkGA1UECBMCTVQxDzANBgNVBAcTBkhlbGVuYTEZMBcG
# A1UEChMQU3RhdGUgb2YgTW9udGFuYTEMMAoGA1UECxMDRE9BMQ4wDAYDVQQLEwVT
# SVRTRDEWMBQGA1UEAxMNRE9BSVNENzE5NC1DQTAeFw0xMTEyMjIxNjQwMjlaFw0y
# MTEyMjIxNjUwMjlaMFgxEzARBgoJkiaJk/IsZAEZFgNhZHMxEjAQBgoJkiaJk/Is
# ZAEZFgJtdDEVMBMGCgmSJomT8ixkARkWBXN0YXRlMRYwFAYDVQQDEw1ET0FJU0Q3
# MTk1LUNBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuxVCUHtCZj4g
# WsWN76jGaDN9scroiyh9xGwB0Z4RQOBe8a4dYXjL731wOhA9s1ukyBwzK1erJ8GG
# X/vbVBCLjnHUZ5NZvu/XA6EHtvFtXHa2gzLVDwNXzxiJxTjaeZzgbduMzwnBZI+C
# C7CWlDj0Brq5un+YQ8NBHlpb0Qv5A1SuiV0XxBWXht1zm9OOD2tYFbKxthyft0Uu
# 8jzihT4k+hHrOZJE1uWHwICccs2yqiwTpGA+Cv3u1Gs8rDOTM16uDu0EKGBdDRzO
# lBMEewPESbf9bC+gi0xM0mEDXjgK68+o4CPc5/+01FFg+sCzPoID3GnrNTGIg1ze
# E2bIdfPGbwIDAQABo4IBjDCCAYgwEAYJKwYBBAGCNxUBBAMCAQAwHQYDVR0OBBYE
# FM6P66mRPYGPAZBS/8zUo8piupmPMGEGA1UdIARaMFgwVgYLKwYBBAGCnhICAQEw
# RzBFBggrBgEFBQcCARY5aHR0cDovL2l0c2QubXQuZ292L3RlY2htdC9wa2kvaXNz
# dWluZy1DQTEtbWdtdHBvbGljeS5tY3B4MBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIA
# QwBBMAsGA1UdDwQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFPOa
# sgPer/Ha6Vqyx92ZZiEa9NplMEAGA1UdHwQ5MDcwNaAzoDGGL2h0dHA6Ly9pdHNk
# Lm10Lmdvdi90ZWNobXQvcGtpL0RPQUlTRDcxOTQtQ0EuY3JsMFYGCCsGAQUFBwEB
# BEowSDBGBggrBgEFBQcwAoY6aHR0cDovL2l0c2QubXQuZ292L3RlY2htdC9wa2kv
# RE9BSVNENzE5NF9ET0FJU0Q3MTk0LUNBLmNydDANBgkqhkiG9w0BAQsFAAOCAgEA
# EikM2tN6sbYzmRfqECSsMQuh+1dwdaVPlBD66EaYTEPA9/b8LKbxicxJ1ivDPgnJ
# FBUFn63XY7uLbJe0F1fvJk8KxE4Y5Fo3VbajbjFOJkZNgxxJGewSXAXid2IBuxSD
# D9y2ZSUKeTDwfbInhdeIRJXh0vlbbZs26I2vFLw6jlZ9WlAWwdFZuFkYnwRlgMaT
# CsBC48MvcCNTiX16QojXTpPgFOEXfleUbHlbKMYQjPti217pHc6OlLFUuKYm1VA/
# h9sQcn5m5Rh0bn7Vv1/u1Z3hG/kh8YxcJnMoYd4LDPdwKxvSQPyiTCMfn/Bbwxm/
# 5T9upm5rFz4EO85047QlgUhSmYjHqYBrdGiltiRKRyjRaIkk2FOWNl13rOI5ax9d
# wXk3rcO0aEJ5UR4M9tM7V70HTguashruHafiiinQoznhYqs3UbGBCAMfLd7S8dT3
# ynv1+5tvoOhRsG8hTVrAJGg/AEj3K9O9TG41wmxdkWXqxzQDvl+xn2koldtnsv4C
# NcZdpa/ojY3LpSCgjp5ZlFXrJXDFN9wkmUlHtg/vzFm7pUT0bfzVgSKOxeGiL3Jf
# 4lgmSvoHWh/r0fFrbKOz6EpmdG4hz5oEASAXUEU0VT3Yno5ZZipA5fIQd47L1jzB
# +ocpLmVbEyusPDpdMPVN0qUlOLIWBAtZTpV2acByEl4wggpvMIIJV6ADAgECAgo/
# NA6rAAAAABYuMA0GCSqGSIb3DQEBCwUAMFgxEzARBgoJkiaJk/IsZAEZFgNhZHMx
# EjAQBgoJkiaJk/IsZAEZFgJtdDEVMBMGCgmSJomT8ixkARkWBXN0YXRlMRYwFAYD
# VQQDEw1ET0FJU0Q3MTk1LUNBMB4XDTE2MTAyNTE1Mjk0OVoXDTE4MTAyNTE1Mjk0
# OVowge4xEzARBgoJkiaJk/IsZAEZFgNhZHMxEjAQBgoJkiaJk/IsZAEZFgJtdDEV
# MBMGCgmSJomT8ixkARkWBXN0YXRlMQwwCgYDVQQLEwNPUEkxDjAMBgNVBAsTBVVz
# ZXJzMRUwEwYDVQQLEwxPUEkgSW50ZXJuYWwxEjAQBgNVBAsTCURpdmlzaW9uczEx
# MC8GA1UECxMoSW5mb3JtYXRpb24gVGVjaG5vbG9neSBTZXJ2aWNlcyBEaXZpc2lv
# bjEZMBcGA1UECxMQTmV0d29yayBTZXJ2aWNlczEVMBMGA1UEAxMMTXVycmF5LCBN
# aWtlMIIEIjANBgkqhkiG9w0BAQEFAAOCBA8AMIIECgKCBAEAmCKaWVA5vvtU+rre
# o4m1S2jiHHvXWmxAWShqOx53F7nui2l9Vy2PzG4cFN1Cvbgqvsk7vE2miNplP0+u
# 2jnHqbtE0p/Rq67z/Pu1Sh9t6EdTgz1ZO2bFmIMgagMQLwfioYxkSGFPXyuwejE9
# S6JOY1xN3hsWnlw1DAYima55d819xbbvjpiAifNhPeYvl4pEGJ6aLYML2SaoaPWb
# bbGgHHJkWrYyJsUa9qRhX2xGDUQDmcnksNnBwmzQKCbLmVwOTfOywTlFSFo+FDnJ
# WWyfdYN6+saoBUroBtOhAHNyeD8caGI/XgYA+9010Wn/cTTTS6HBTSg2mY67Ti6+
# 61DEtgWZMHQh/y2h0l7LzZ4iwIMnOBrSMv3KKNeucTkNGgc2TuUPX5A/2HfB0D8d
# /crfd0NK78VqN3AgnBdR4dedAwBGunW5fBREIYIgGsZyaN831W4G2xiN/D5FpEFu
# 3jyPBfJKnDv78rEwLpMY8kN1IDkh/4iP4VqzIrlQOmcgIPovixJb4dLxl9CVlVWt
# 8kMeFaqytrEt0JwXwhBnMLa4sPAG3/wKl66H61i53eOQL2aB0nQ2xNyvosfwCO3y
# QtDREO7LJ3uQ8dhD+j6vnBe8Vl/33sLN4K6bgox0vDc3+wYC44RY/lu3vym8EeQR
# BZjxnt9jLe72iq0tyq3w+f4I26n7mPkL59w3Z5h57ARnHDQgTNVjUet15cRq7b3V
# 4i0YCcgmjb0x/mU4cGm7zmqHQSLKRVnoK3xvpeTVJtONeCxaRJ0QKIk+9b+VcFIp
# Yw58b7pzRa+RImBfggGVDwpZ7ACCNElhEc0hKZZXcQcPDH6BUjRaqkd1KNKpcEjv
# Rnx4G9WYzWxEBTMcR++P2PG2sNruMBJgsjEhTS5ucTtNshcSBFJM+w+nC3s1rbgT
# 4DLAAXkYZ+LPTmsDHxJEycRPbZVtGt/sBHPdYVc7RVwEjKfiqt5fqBc5pNsfZWF/
# 0mMB1+A/9OxCg979R+PTb9Quo/QiRxUsOkZT7Igt9fKUL+IecKuU9NQmc5/Y+48y
# OJ67mRSkI0rwuipJWCt079YRVmrIT1OuWhTRRULfPuxFQWFxccqFcE0IwJ6Oj18M
# DTHJVpA/w1XGwQNfFl6e9fN3ELNTlDT4PBZ2nUk3p+pjbEN5EWEP76fXmrg6f/+y
# LxBWAXv9jflng6psI2DY8yFt0iWY/IflhxLETp038IJuhwOrCQrhZ21u62ZAlJ0L
# WaZaAfKOwh5c4bAySC99xmNy7ByTZINmtEA4gKGp/fYj6SXaYNShW8PcGQ8ON8Lk
# DWa2i9Cwp9mxMjUBJnhWNHOF/wOXtctnLMhiaV2ur/ksgYYEqbm+sO2wZ03NY2L6
# 9tw25wIDAQABo4IDojCCA54wCwYDVR0PBAQDAgeAMD0GCSsGAQQBgjcVBwQwMC4G
# JisGAQQBgjcVCIHGmzOE1vFDhbmHNYWjmgmGp8QhVIOPgVSGhtFRAgFkAgEDMB0G
# A1UdDgQWBBSt5VuW0o/Z+ZVbp1LUxl49hnEJUjAfBgNVHSMEGDAWgBTOj+upkT2B
# jwGQUv/M1KPKYrqZjzCCATwGA1UdHwSCATMwggEvMIIBK6CCASegggEjhoGybGRh
# cDovLy9DTj1ET0FJU0Q3MTk1LUNBLENOPURPQUlTRDcxOTUsQ049Q0RQLENOPVB1
# YmxpYyUyMEtleSUyMFNlcnZpY2VzLENOPVNlcnZpY2VzLENOPUNvbmZpZ3VyYXRp
# b24sREM9bXQsREM9YWRzP2NlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3Q/YmFzZT9v
# YmplY3RDbGFzcz1jUkxEaXN0cmlidXRpb25Qb2ludIYvaHR0cDovL2l0c2QubXQu
# Z292L3RlY2htdC9wa2kvRE9BSVNENzE5NS1DQS5jcmyGO2h0dHA6Ly9kb2Fpc2Q3
# MTk1LnN0YXRlLm10LmFkcy9DZXJ0RW5yb2xsL0RPQUlTRDcxOTUtQ0EuY3JsMIIB
# cgYIKwYBBQUHAQEEggFkMIIBYDCBpwYIKwYBBQUHMAKGgZpsZGFwOi8vL0NOPURP
# QUlTRDcxOTUtQ0EsQ049QUlBLENOPVB1YmxpYyUyMEtleSUyMFNlcnZpY2VzLENO
# PVNlcnZpY2VzLENOPUNvbmZpZ3VyYXRpb24sREM9bXQsREM9YWRzP2NBQ2VydGlm
# aWNhdGU/YmFzZT9vYmplY3RDbGFzcz1jZXJ0aWZpY2F0aW9uQXV0aG9yaXR5MFMG
# CCsGAQUFBzAChkdodHRwOi8vaXRzZC5tdC5nb3YvdGVjaG10L3BraS9ET0FJU0Q3
# MTk1LnN0YXRlLm10LmFkc19ET0FJU0Q3MTk1LUNBLmNydDBfBggrBgEFBQcwAoZT
# aHR0cDovL2RvYWlzZDcxOTUuc3RhdGUubXQuYWRzL0NlcnRFbnJvbGwvRE9BSVNE
# NzE5NS5zdGF0ZS5tdC5hZHNfRE9BSVNENzE5NS1DQS5jcnQwEwYDVR0lBAwwCgYI
# KwYBBQUHAwMwGwYJKwYBBAGCNxUKBA4wDDAKBggrBgEFBQcDAzAoBgNVHREEITAf
# oB0GCisGAQQBgjcUAgOgDwwNQ1BBMTE0QG10LmdvdjANBgkqhkiG9w0BAQsFAAOC
# AQEAZLrHgo2yrzL6JMqCZi4b1F5udqVgvTZk5rhlZtkmUn8ZyWt0y3Oyhc5es+je
# xsYzNMhG4Sb9QoK5m/oLkNp08rQ6ddk31rHkkKd+7nszyYYtn0G5/oPQYMR0ryPf
# LbjeSHeO2HEsrWnAedUNXp54/osZlak9WU2d4f4LkpVUhK9gGUKN/F7Grc7SW0Ng
# 47cN4DYGkH7snHRWiT31nCN+K1iliccdaIoHvDMFtbiDaZGdepGGZxMAykfRZ2qo
# qN+6dm2VJA5u1mmcBlMghE+O5f49N5ZNYMkxOGL5zfJO1TTST9TTfkkTOTkm9rJs
# 5epbcCrvjUebPpNWamqcYEm3SzGCBQcwggUDAgEBMGYwWDETMBEGCgmSJomT8ixk
# ARkWA2FkczESMBAGCgmSJomT8ixkARkWAm10MRUwEwYKCZImiZPyLGQBGRYFc3Rh
# dGUxFjAUBgNVBAMTDURPQUlTRDcxOTUtQ0ECCj80DqsAAAAAFi4wCQYFKw4DAhoF
# AKB4MBgGCisGAQQBgjcCAQwxCjAIoAKAAKECgAAwGQYJKoZIhvcNAQkDMQwGCisG
# AQQBgjcCAQQwHAYKKwYBBAGCNwIBCzEOMAwGCisGAQQBgjcCARUwIwYJKoZIhvcN
# AQkEMRYEFAPsKNRmhNwmCSPAf2kmAGG5OT0DMA0GCSqGSIb3DQEBAQUABIIEAE1T
# VGJmOwQTShDMOOk6OkKwQ+nSGpta9q61M7mB8v5kIo2a11YctoN8UihrvHkrd5v8
# iFKM0l1FTr8OjuBaMlpkhtZPdVoD/sp/01/ivip5wPq5orkcf2L2TJJ8GOCvK/1T
# VrIo/nSIi8aNDj++dTtsHvp4Lkn+MA/mAUdIOqcGZCD0yOCceR0L03eE3KZUlO+G
# 1o5HtXHMDGoO0KjSmu3HmVdfEQWJtuUUjj1dd3R4oIglB6DGFr4ONaBitGDwlgr5
# JecrU6J0SfBZue349Xw8r6uqTmNF9YDiN8svycM8sR20eaeMAl6/7jbhhg1Yx4f7
# ioUA2D4d5U19IRSStQ/SpxWhA+U6iDI04FKPQxq+BMeoj4WJggqoqgr1QCDDgaDt
# er2lrwU5BZcPkGZnGqiRVhIQQLi0jFW8UGnW40rfse/ONCWZsgb0JSwNswHUDdvo
# DaB7n86IZ3u8xyNJB/tPWw+fMlvzQzLbpS0ADZjhSBt2BqtlMkS7hxrV9xPutnDO
# TIL/WstYw8Xi6O8lJRSalGUNOaJpWTOJfEfMnCvGzBD0aF8x0XLtvVrY3/xxd7Bv
# kicJoFy12Q3zBfv2iwd9ywS/AH/R8+Uei1fJUWMemCWOdS20VoMGbdkGXnc2l391
# T3X1DQ+zmHuQchBdbFCGghrnp3dtYVzRD0HQ7ttzKcTuSIJ71JCq/NOnnyLRshLu
# 53ftnTT48QEI9Av4sjAEKJH862nRt94L5kI14xwhv+gUS5TDHJoWY5uC7iVHjws8
# W5eccgJTr5eZfi4/efNe2WGk6WvtB0PQwmUkqcwiX9G3j8ZkiN1TyNoxuY3d6B4l
# rNGA+DZkCkgH+HAzL8RTDJsNLF+T41JGwf+e1Er8KDzfT4V6Yqdh+p6FFAzgJYHK
# N47KcXzDFsQP71d6+raqvIkbCaZdgljp4gzgI0HRItdp8Xf5pKkt+d8YENfmWymJ
# MSjtX8OLGH2Z1KqYANTTIOuVW2znOrX7/ny0YjEUHTvh4brB49E4oLEboR8zTIvo
# a40lbACitV/26z85OCjRCXOV0Fic1VrJIAnVgBEtRtbwpag3ZSfoYK0yEnU9GM3X
# UH9zTfvToyq2OgwnIPq+bcwtcDzzIH8rYHxqnUR5bcsWsxEyEIFQA6YSde+8EtlP
# l/IULUnH/AHU8OUmjjLXFuoofVMH8lDFAnrv3o/tsXywLUXJh7NpVZXNl17A5/YK
# xS/Fih4XXLvqhpGB49X1WB3vK36P7nCbdy3+k5FDETxTgRCN5l/ZNmBFZR+V9aoH
# sbEzj8Jl1nmGYrjlBCCX940fvMsCOnTeTHo0tHlHebl7TIoOnOheqz3tEMHDDA24
# dwDG3f+Ebx4m0b9H84w=
# SIG # End signature block
